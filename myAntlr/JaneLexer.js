// Generated from Jane.g4 by ANTLR 4.13.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,28,145,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,
27,7,27,1,0,1,0,1,0,1,1,1,1,1,1,1,2,4,2,65,8,2,11,2,12,2,66,1,2,1,2,1,3,
1,3,1,4,4,4,74,8,4,11,4,12,4,75,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,
1,6,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,
10,1,10,1,10,1,11,1,11,1,11,1,12,1,12,1,13,1,13,1,13,1,14,1,14,1,14,1,15,
1,15,1,16,1,16,1,17,1,17,1,18,1,18,1,19,1,19,1,20,1,20,1,21,1,21,1,22,1,
22,1,23,1,23,1,24,1,24,1,24,1,25,1,25,1,26,1,26,1,27,1,27,0,0,28,1,1,3,2,
5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,
33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,
1,0,3,3,0,9,10,13,13,32,32,2,0,65,90,97,122,1,0,48,57,146,0,1,1,0,0,0,0,
3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,
0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,
0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,
37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,
0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,1,57,1,0,0,0,3,60,
1,0,0,0,5,64,1,0,0,0,7,70,1,0,0,0,9,73,1,0,0,0,11,77,1,0,0,0,13,82,1,0,0,
0,15,88,1,0,0,0,17,93,1,0,0,0,19,96,1,0,0,0,21,101,1,0,0,0,23,107,1,0,0,
0,25,110,1,0,0,0,27,112,1,0,0,0,29,115,1,0,0,0,31,118,1,0,0,0,33,120,1,0,
0,0,35,122,1,0,0,0,37,124,1,0,0,0,39,126,1,0,0,0,41,128,1,0,0,0,43,130,1,
0,0,0,45,132,1,0,0,0,47,134,1,0,0,0,49,136,1,0,0,0,51,139,1,0,0,0,53,141,
1,0,0,0,55,143,1,0,0,0,57,58,5,62,0,0,58,59,5,61,0,0,59,2,1,0,0,0,60,61,
5,60,0,0,61,62,5,61,0,0,62,4,1,0,0,0,63,65,7,0,0,0,64,63,1,0,0,0,65,66,1,
0,0,0,66,64,1,0,0,0,66,67,1,0,0,0,67,68,1,0,0,0,68,69,6,2,0,0,69,6,1,0,0,
0,70,71,7,1,0,0,71,8,1,0,0,0,72,74,7,2,0,0,73,72,1,0,0,0,74,75,1,0,0,0,75,
73,1,0,0,0,75,76,1,0,0,0,76,10,1,0,0,0,77,78,5,116,0,0,78,79,5,114,0,0,79,
80,5,117,0,0,80,81,5,101,0,0,81,12,1,0,0,0,82,83,5,102,0,0,83,84,5,97,0,
0,84,85,5,108,0,0,85,86,5,115,0,0,86,87,5,101,0,0,87,14,1,0,0,0,88,89,5,
115,0,0,89,90,5,107,0,0,90,91,5,105,0,0,91,92,5,112,0,0,92,16,1,0,0,0,93,
94,5,105,0,0,94,95,5,102,0,0,95,18,1,0,0,0,96,97,5,101,0,0,97,98,5,108,0,
0,98,99,5,115,0,0,99,100,5,101,0,0,100,20,1,0,0,0,101,102,5,119,0,0,102,
103,5,104,0,0,103,104,5,105,0,0,104,105,5,108,0,0,105,106,5,101,0,0,106,
22,1,0,0,0,107,108,5,100,0,0,108,109,5,111,0,0,109,24,1,0,0,0,110,111,5,
59,0,0,111,26,1,0,0,0,112,113,5,58,0,0,113,114,5,61,0,0,114,28,1,0,0,0,115,
116,5,61,0,0,116,117,5,61,0,0,117,30,1,0,0,0,118,119,5,40,0,0,119,32,1,0,
0,0,120,121,5,41,0,0,121,34,1,0,0,0,122,123,5,33,0,0,123,36,1,0,0,0,124,
125,5,42,0,0,125,38,1,0,0,0,126,127,5,47,0,0,127,40,1,0,0,0,128,129,5,43,
0,0,129,42,1,0,0,0,130,131,5,45,0,0,131,44,1,0,0,0,132,133,5,62,0,0,133,
46,1,0,0,0,134,135,5,60,0,0,135,48,1,0,0,0,136,137,5,38,0,0,137,138,5,38,
0,0,138,50,1,0,0,0,139,140,5,123,0,0,140,52,1,0,0,0,141,142,5,125,0,0,142,
54,1,0,0,0,143,144,5,61,0,0,144,56,1,0,0,0,3,0,66,75,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class JaneLexer extends antlr4.Lexer {

    static grammarFileName = "Jane.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'>='", "'<='", null, null, null, "'true'", 
                         "'false'", "'skip'", "'if'", "'else'", "'while'", 
                         "'do'", "';'", "':='", "'=='", "'('", "')'", "'!'", 
                         "'*'", "'/'", "'+'", "'-'", "'>'", "'<'", "'&&'", 
                         "'{'", "'}'", "'='" ];
	static symbolicNames = [ null, null, null, "WS", "VAR", "NUMBER", "TRUE", 
                          "FALSE", "SSKIP", "IF", "ELSE", "WHILE", "DO", 
                          "SEMICOLON", "ASSIGN", "SIGN", "LPAREN", "RPAREN", 
                          "EXCLAMATION", "MUL", "DIV", "PLUS", "MINUS", 
                          "RANGLE", "LANGLE", "AND", "LBRACE", "RBRACE", 
                          "EQUAL" ];
	static ruleNames = [ "T__0", "T__1", "WS", "VAR", "NUMBER", "TRUE", "FALSE", 
                      "SSKIP", "IF", "ELSE", "WHILE", "DO", "SEMICOLON", 
                      "ASSIGN", "SIGN", "LPAREN", "RPAREN", "EXCLAMATION", 
                      "MUL", "DIV", "PLUS", "MINUS", "RANGLE", "LANGLE", 
                      "AND", "LBRACE", "RBRACE", "EQUAL" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

JaneLexer.EOF = antlr4.Token.EOF;
JaneLexer.T__0 = 1;
JaneLexer.T__1 = 2;
JaneLexer.WS = 3;
JaneLexer.VAR = 4;
JaneLexer.NUMBER = 5;
JaneLexer.TRUE = 6;
JaneLexer.FALSE = 7;
JaneLexer.SSKIP = 8;
JaneLexer.IF = 9;
JaneLexer.ELSE = 10;
JaneLexer.WHILE = 11;
JaneLexer.DO = 12;
JaneLexer.SEMICOLON = 13;
JaneLexer.ASSIGN = 14;
JaneLexer.SIGN = 15;
JaneLexer.LPAREN = 16;
JaneLexer.RPAREN = 17;
JaneLexer.EXCLAMATION = 18;
JaneLexer.MUL = 19;
JaneLexer.DIV = 20;
JaneLexer.PLUS = 21;
JaneLexer.MINUS = 22;
JaneLexer.RANGLE = 23;
JaneLexer.LANGLE = 24;
JaneLexer.AND = 25;
JaneLexer.LBRACE = 26;
JaneLexer.RBRACE = 27;
JaneLexer.EQUAL = 28;



